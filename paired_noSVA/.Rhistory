library(knitr)
opts_chunk$set(cache=TRUE,
cache.path="cache/DC",
cache.extra=R.version.string,
autodep=TRUE,
fig.align="center",
comment="")
library(SummarizedExperiment)
se <- readRDS(file.path("rawCounts", "seLUSC.rds"))
se
normal <- data.frame(colData(se)[colData(se)$type == 'normal',])$bcr_patient_barcode
tumor <- data.frame(colData(se)[colData(se)$type == 'tumor',])$bcr_patient_barcode
common_bcr_patient_barcode <- normal[normal %in% tumor]
length(common_bcr_patient_barcode)
# 47 patients that are paired
paired_seLUSC <- se[,colData(se)$bcr_patient_barcode %in% common_bcr_patient_barcode]
paired_seLUSC$bcr_patient_barcode <- droplevels(paired_seLUSC$bcr_patient_barcode)
saveRDS(paired_seLUSC, file.path("results", "paired_seLUSC.rds"))
normal <- data.frame(colData(se)[colData(se)$type == 'normal',])$bcr_patient_barcode
tumor <- data.frame(colData(se)[colData(se)$type == 'tumor',])$bcr_patient_barcode
common_bcr_patient_barcode <- normal[normal %in% tumor]
length(common_bcr_patient_barcode)
# 47 patients that are paired
paired_seLUSC <- se[,colData(se)$bcr_patient_barcode %in% common_bcr_patient_barcode]
paired_seLUSC$bcr_patient_barcode <- droplevels(paired_seLUSC$bcr_patient_barcode)
saveRDS(paired_seLUSC, file.path("results", "paired_seLUSC.rds"))
library(knitr)
opts_chunk$set(cache=TRUE,
cache.path="cache/QA",
cache.extra=R.version.string,
autodep=TRUE,
fig.align="center",
comment="")
library(SummarizedExperiment)
paired_se <- readRDS(file.path("results", "paired_seLUSC.rds"))
dim(colData(paired_se))
colData(paired_se)[1:5, 1:5]
mcols(colData(paired_se), use.names=TRUE)
rowData(paired_se)
rowRanges(paired_se)
table(paired_se$type)
library(edgeR)
paired_dge <- DGEList(counts=assays(paired_se)$counts, genes=mcols(paired_se))
names(paired_dge)
saveRDS(paired_dge, file.path("results", "paired_dge.rds"))
assays(paired_se)$logCPM <- cpm(paired_dge, log=TRUE, prior.count=0.5)
assays(paired_se)$logCPM[1:5, 1:5]
ord <- order(paired_dge$sample$lib.size/1e6)
barplot(paired_dge$sample$lib.size[ord], las=1, ylab="Millions of reads",
xlab="Samples", col=c("blue", "red")[(paired_se$type[ord] == "tumor") + 1])
legend("topleft", c("normal", "tumor"), fill=c("red", "blue"), inset=0.01)
library(geneplotter)
par(mfrow=c(1, 2))
multidensity(as.list(as.data.frame(assays(paired_se[, paired_se$type == "tumor"])$logCPM)),
xlab="log 2 CPM", legend=NULL, main="Tumor samples", las=1)
multidensity(as.list(as.data.frame(assays(paired_se[, paired_se$type == "normal"])$logCPM)),
xlab="log 2 CPM", legend=NULL, main="Normal samples", las=1)
avgexp <- rowMeans(assays(paired_se)$logCPM)
hist(avgexp, xlab="log2 CPM", main="", las=1, col="steelblue")
abline(v=1, col="red", lwd=2)
paired_dge$samples$group <- paired_se$type
table(paired_dge$samples$group)
plotSmear(paired_dge, lowess = TRUE, las = 1, cex.lab = 1.5, cex.axis = 1.2)
abline(h = 0, col = "blue", lwd = 2)
mask <- avgexp > 1
dim(paired_se)
paired_se.filt <- paired_se[mask, ]
dim(paired_se.filt)
paired_dge.filt <- paired_dge[mask, ]
dim(paired_dge.filt)
saveRDS(paired_se.filt, file.path("results", "paired_se.filt.unnorm.rds"))
saveRDS(paired_dge.filt, file.path("results", "paired_dge.filt.unnorm.rds"))
cpmcutoff <- round(10/min(paired_dge$sample$lib.size/1e+06), digits = 1)
cpmcutoff
nsamplescutoff <- min(table(paired_se$type))
nsamplescutoff
mask2 <- rowSums(cpm(paired_dge) > cpmcutoff) >= nsamplescutoff
paired_se.filt2 <- paired_se[mask2, ]
paired_dge.filt2 <- paired_dge[mask2, ]
dim(paired_se)
dim(paired_se.filt)
dim(paired_se.filt2)
saveRDS(paired_se.filt2, file.path("results", "paired_se.filt2.unnorm.rds"))
saveRDS(paired_dge.filt2, file.path("results", "paired_dge.filt2.unnorm.rds"))
par(mar = c(4, 5, 1, 1))
h <- hist(avgexp, xlab="log2 CPM", main="",
las=1, col ="steelblue", cex.axis=1.2, cex.lab=1.5)
x <- cut(rowMeans(assays(paired_se.filt)$logCPM), breaks=h$breaks)
lines(h$mids-0.1, table(x), type = "h", lwd=5, lend=1, col = "olivedrab")
y <- cut(rowMeans(assays(paired_se.filt2)$logCPM), breaks=h$breaks)
lines(h$mids+0.1, table(y), type = "h", lwd=5, lend=1, col = "lightgoldenrod")
legend("topright", c("All genes", "Filtered genes", "Filtered 2 genes"), fill=c("steelblue", "olivedrab", "lightgoldenrod"))
paired_dge.filt <- calcNormFactors(paired_dge.filt)
assays(paired_se.filt)$logCPM <- cpm(paired_dge.filt, log=TRUE, normalized.lib.sizes=TRUE, prior.count=0.25)
saveRDS(paired_se.filt, file.path("results", "paired_se.filt.rds"))
saveRDS(paired_dge.filt, file.path("results", "paired_dge.filt.rds"))
paired_dge$samples$group <- paired_se$type
table(paired_dge$samples$group)
paired_dge.filt$samples$group <- paired_se$type
plotSmear(paired_dge.filt, lowess = TRUE, las = 1, cex.lab = 1.5, cex.axis = 1.2)
abline(h = 0, col = "blue", lwd = 2)
par(mfrow=c(22, 3), mar=c(4, 5, 3, 1))
setmp <- paired_se.filt[, paired_se.filt$type == "tumor"]
dgetmp <- paired_dge.filt[, paired_se.filt$type == "tumor"]
for (i in 1:ncol(setmp)) {
A <- rowMeans(assays(setmp)$logCPM)
M <- assays(setmp)$logCPM[, i] - A
samplename <- substr(as.character(setmp$bcr_patient_barcode[i]), 1, 12)
smoothScatter(A, M, main=samplename, las=1)
abline(h=0, col="blue", lwd=2)
lo <- lowess(M ~ A)
lines(lo$x, lo$y, col="red", lwd=2)
}
par(mfrow=c(9, 3), mar=c(4, 5, 3, 1))
setmp <- paired_se.filt[, paired_se.filt$type == "normal"]
dgetmp <- paired_dge.filt[, paired_se$type == "normal"]
for (i in 1:ncol(setmp)) {
A <- rowMeans(assays(setmp)$logCPM)
M <- assays(setmp)$logCPM[, i] - A
samplename <- substr(as.character(setmp$bcr_patient_barcode[i]), 1, 12)
smoothScatter(A, M, main=samplename, las=1)
abline(h=0, col="blue", lwd=2)
lo <- lowess(M ~ A)
lines(lo$x, lo$y, col="red", lwd=2)
}
tss <- substr(colnames(paired_se.filt), 6, 7)
table(tss)
center <- substr(colnames(paired_se.filt), 27, 28)
table(center)
plate <- substr(colnames(paired_se.filt), 22, 25)
table(plate)
portionanalyte <- substr(colnames(paired_se.filt), 18, 20)
table(portionanalyte)
samplevial <- substr(colnames(paired_se.filt), 14, 16)
table(samplevial)
table(data.frame(TYPE=paired_se.filt$type, TSS=tss))
table(data.frame(TYPE=paired_se.filt$type, PORTIONALYTE=portionanalyte))
table(data.frame(TYPE=paired_se.filt$type, PLATE=plate))
table(data.frame(TYPE=paired_se.filt$type, SAMPLEVIAL=samplevial))

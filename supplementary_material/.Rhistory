library(knitr)
library(SummarizedExperiment)
library(edgeR)
opts_chunk$set(cache=TRUE,
cache.path="cache/file2",
cache.extra=R.version.string,
autodep=TRUE,
fig.align="center",
comment="")
se.filt <- readRDS(file.path("results", "paired_se.filt.rds"))
dge.filt <- readRDS(file.path("results", "paired_dge.filt.rds"))
library(sva)
mod <- model.matrix(~type + bcr_patient_barcode, data = colData(se.filt))
mod0 <- model.matrix(~1, data = colData(se.filt))
sv <- sva(assays(se.filt)$logCPM, mod = mod, mod0 = mod0)
library(SummarizedExperiment)
paired_se <- readRDS(file.path("results", "paired_seLUSC.rds"))
paired_se
library(edgeR)
paired_dge <- DGEList(counts=assays(paired_se)$counts, genes=mcols(paired_se))
names(paired_dge)
saveRDS(paired_dge, file.path("results", "paired_dge.rds"))
assays(paired_se)$logCPM <- cpm(paired_dge, log=TRUE, prior.count=0.5)
assays(paired_se)$logCPM[1:5, 1:5]
ord <- order(paired_dge$sample$lib.size/1e6)
barplot(paired_dge$sample$lib.size[ord], las=1, ylab="Millions of reads",
xlab="Samples", col=c("blue", "red")[(paired_se$type[ord] == "tumor") + 1])
legend("topleft", c("normal", "tumor"), fill=c("red", "blue"), inset=0.01)
avgexp <- rowMeans(assays(paired_se)$logCPM)
hist(avgexp, xlab="log2 CPM", main="", las=1, col="steelblue")
abline(v=1, col="red", lwd=2)
paired_dge$samples$group <- paired_se$type
table(paired_dge$samples$group)
plotSmear(paired_dge, lowess = TRUE, las = 1, cex.lab = 1.5, cex.axis = 1.2)
abline(h = 0, col = "blue", lwd = 2)
mask <- avgexp > 1
dim(paired_se)
paired_se.filt <- paired_se[mask, ]
dim(paired_se.filt)
paired_dge.filt <- paired_dge[mask, ]
dim(paired_dge.filt)
saveRDS(paired_se.filt, file.path("results", "paired_se.filt.unnorm.rds"))
saveRDS(paired_dge.filt, file.path("results", "paired_dge.filt.unnorm.rds"))
cpmcutoff <- round(10/min(paired_dge$sample$lib.size/1e+06), digits = 1)
cpmcutoff
nsamplescutoff <- min(table(paired_se$type))
nsamplescutoff
mask2 <- rowSums(cpm(paired_dge) > cpmcutoff) >= nsamplescutoff
paired_se.filt2 <- paired_se[mask2, ]
paired_dge.filt2 <- paired_dge[mask2, ]
dim(paired_se)
dim(paired_se.filt)
dim(paired_se.filt2)
saveRDS(paired_se.filt2, file.path("results", "paired_se.filt2.unnorm.rds"))
saveRDS(paired_dge.filt2, file.path("results", "paired_dge.filt2.unnorm.rds"))
par(mar = c(4, 5, 1, 1))
h <- hist(avgexp, xlab="log2 CPM", main="",
las=1, col ="steelblue", cex.axis=1.2, cex.lab=1.5)
x <- cut(rowMeans(assays(paired_se.filt)$logCPM), breaks=h$breaks)
lines(h$mids-0.1, table(x), type = "h", lwd=5, lend=1, col = "olivedrab")
y <- cut(rowMeans(assays(paired_se.filt2)$logCPM), breaks=h$breaks)
lines(h$mids+0.1, table(y), type = "h", lwd=5, lend=1, col = "lightgoldenrod")
legend("topright", c("All genes", "Filtered genes", "Filtered 2 genes"), fill=c("steelblue", "olivedrab", "lightgoldenrod"))
paired_dge.filt <- calcNormFactors(paired_dge.filt)
assays(paired_se.filt)$logCPM <- cpm(paired_dge.filt, log=TRUE, normalized.lib.sizes=TRUE, prior.count=0.25)
saveRDS(paired_se.filt, file.path("results", "paired_se.filt.rds"))
saveRDS(paired_dge.filt, file.path("results", "paired_dge.filt.rds"))
paired_dge$samples$group <- paired_se$type
table(paired_dge$samples$group)
paired_dge.filt$samples$group <- paired_se$type
plotSmear(paired_dge.filt, lowess = TRUE, las = 1, cex.lab = 1.5, cex.axis = 1.2)
abline(h = 0, col = "blue", lwd = 2)
par(mfrow=c(22, 3), mar=c(4, 5, 3, 1))
setmp <- paired_se.filt[, paired_se.filt$type == "tumor"]
dgetmp <- paired_dge.filt[, paired_se.filt$type == "tumor"]
for (i in 1:ncol(setmp)) {
A <- rowMeans(assays(setmp)$logCPM)
M <- assays(setmp)$logCPM[, i] - A
samplename <- substr(as.character(setmp$bcr_patient_barcode[i]), 1, 12)
smoothScatter(A, M, main=samplename, las=1)
abline(h=0, col="blue", lwd=2)
lo <- lowess(M ~ A)
lines(lo$x, lo$y, col="red", lwd=2)
}
par(mfrow=c(9, 3), mar=c(4, 5, 3, 1))
setmp <- paired_se.filt[, paired_se.filt$type == "normal"]
dgetmp <- paired_dge.filt[, paired_se$type == "normal"]
for (i in 1:ncol(setmp)) {
A <- rowMeans(assays(setmp)$logCPM)
M <- assays(setmp)$logCPM[, i] - A
samplename <- substr(as.character(setmp$bcr_patient_barcode[i]), 1, 12)
smoothScatter(A, M, main=samplename, las=1)
abline(h=0, col="blue", lwd=2)
lo <- lowess(M ~ A)
lines(lo$x, lo$y, col="red", lwd=2)
}
par(mfrow=c(9, 3), mar=c(4, 5, 3, 1))
setmp <- paired_se.filt[, paired_se.filt$type == "normal"]
dgetmp <- paired_dge.filt[, paired_se$type == "normal"]
for (i in 1:ncol(setmp)) {
A <- rowMeans(assays(setmp)$logCPM)
M <- assays(setmp)$logCPM[, i] - A
samplename <- substr(as.character(setmp$bcr_patient_barcode[i]), 1, 12)
smoothScatter(A, M, main=samplename, las=1)
abline(h=0, col="blue", lwd=2)
lo <- lowess(M ~ A)
lines(lo$x, lo$y, col="red", lwd=2)
}
tss <- substr(colnames(paired_se.filt), 6, 7)
table(tss)
center <- substr(colnames(paired_se.filt), 27, 28)
table(center)
plate <- substr(colnames(paired_se.filt), 22, 25)
table(plate)
portionanalyte <- substr(colnames(paired_se.filt), 18, 20)
table(portionanalyte)
samplevial <- substr(colnames(paired_se.filt), 14, 16)
table(samplevial)
table(data.frame(TYPE=paired_se.filt$type, TSS=tss))
table(data.frame(TYPE=paired_se.filt$type, PORTIONALYTE=portionanalyte))
table(data.frame(TYPE=paired_se.filt$type, PLATE=plate))
table(data.frame(TYPE=paired_se.filt$type, SAMPLEVIAL=samplevial))
logCPM <- cpm(paired_dge.filt, log=TRUE, prior.count=3)
d <- as.dist(1-cor(logCPM, method="spearman"))
sampleClustering <- hclust(d)
batch <- as.integer(factor(paired_se.filt$type))
sampleDendrogram <- as.dendrogram(sampleClustering, hang=0.1)
names(batch) <- colnames(paired_se.filt)
outcome <- paste(substr(colnames(paired_se.filt), 9, 12), as.character(paired_se.filt$type), sep="-")
names(outcome) <- colnames(paired_se.filt)
sampleDendrogram <- dendrapply(sampleDendrogram,
function(x, batch, labels) {
if (is.leaf(x)) {
attr(x, "nodePar") <- list(lab.col=as.vector(batch[attr(x, "label")]))
attr(x, "label") <- as.vector(labels[attr(x, "label")])
}
x
}, batch, outcome)
plot(sampleDendrogram, main="Hierarchical clustering of samples")
legend("topright", paste("Batch", sort(unique(batch)), levels(factor(paired_se.filt$type))), fill=sort(unique(batch)))
plotMDS(paired_dge.filt, labels=outcome, col=batch)
legend("bottomleft", paste("Batch", sort(unique(batch)), levels(factor(paired_se.filt$type))),
fill=sort(unique(batch)), inset=0.05)
maskbad <- colnames(paired_se.filt) %in% colnames(paired_se.filt)[substr(colnames(paired_se.filt), 9, 12) == "8623"]
dim(paired_se.filt)
dim(paired_dge.filt)
paired_se.filt <- paired_se.filt[, !maskbad]
paired_dge.filt <- paired_dge.filt[, !maskbad]
dim(paired_se.filt)
dim(paired_dge.filt)
logCPM <- cpm(paired_dge.filt, log=TRUE, prior.count=3)
d <- as.dist(1-cor(logCPM, method="spearman"))
sampleClustering <- hclust(d)
batch <- as.integer(factor(paired_se.filt$type))
sampleDendrogram <- as.dendrogram(sampleClustering, hang=0.1)
names(batch) <- colnames(paired_se.filt)
outcome <- paste(substr(colnames(paired_se.filt), 9, 12), as.character(paired_se.filt$type), sep="-")
names(outcome) <- colnames(paired_se.filt)
sampleDendrogram <- dendrapply(sampleDendrogram,
function(x, batch, labels) {
if (is.leaf(x)) {
attr(x, "nodePar") <- list(lab.col=as.vector(batch[attr(x, "label")]))
attr(x, "label") <- as.vector(labels[attr(x, "label")])
}
x
}, batch, outcome)
plot(sampleDendrogram, main="Hierarchical clustering of samples")
legend("topright", paste("Batch", sort(unique(batch)), levels(factor(paired_se.filt$type))), fill=sort(unique(batch)))
plotMDS(paired_dge.filt, labels=outcome, col=batch)
legend("bottomleft", paste("Batch", sort(unique(batch)), levels(factor(paired_se.filt$type))),
fill=sort(unique(batch)), inset=0.05)
saveRDS(paired_se.filt, file.path("results", "paired_se.filt2.rds"))
saveRDS(paired_dge.filt, file.path("results", "paired_dge.filt2.rds"))
library(knitr)
library(SummarizedExperiment)
library(edgeR)
opts_chunk$set(cache=TRUE,
cache.path="cache/file2",
cache.extra=R.version.string,
autodep=TRUE,
fig.align="center",
comment="")
se.filt <- readRDS(file.path("results", "paired_se.filt.rds"))
dge.filt <- readRDS(file.path("results", "paired_dge.filt.rds"))
library(sva)
mod <- model.matrix(~type + bcr_patient_barcode, data = colData(se.filt))
mod0 <- model.matrix(~1, data = colData(se.filt))
sv <- sva(assays(se.filt)$logCPM, mod = mod, mod0 = mod0)
sv$n
mod <- cbind(mod, sv$sv)
colnames(mod) <- c(colnames(mod)[1:(nlevels(se.filt$bcr_patient_barcode)+1)], paste0("SV", 1:sv$n))
v <- voom(dge.filt, mod, plot=TRUE)
fit <- lmFit(v, mod)
fit <- eBayes(fit)
FDRcutoff <- 0.1
res <- decideTests(fit, p.value = FDRcutoff)
summary(res)
genesmd <- data.frame(chr = as.character(seqnames(rowRanges(se.filt))), symbol = rowData(se.filt)[, 1], stringsAsFactors = FALSE)
fit$genes <- genesmd
tt <- topTable(fit, coef = 2, n = Inf)
head(tt, n = 10)
par(mfrow = c(1, 2), mar = c(4, 5, 2, 2))
hist(tt$P.Value, xlab = "Raw P-values", main = "", las = 1)
qqt(fit$t[, 2], df = fit$df.prior + fit$df.residual, main = "", pch = ".", cex = 3)
abline(0, 1, lwd = 2)
sessionInfo()
library(knitr)
library(SummarizedExperiment)
library(edgeR)
library(geneplotter)
opts_chunk$set(cache=TRUE,
cache.path="cache/file2",
cache.extra=R.version.string,
autodep=TRUE,
fig.align="center",
comment="")
se.filt <- readRDS(file.path("results", "paired_se.filt.rds"))
dge.filt <- readRDS(file.path("results", "paired_dge.filt.rds"))
geneUniverse <- rownames(se.filt)
length(geneUniverse)
library(GSEABase)
entrezOncogens <- getGmt("c6.all.v6.1.entrez.gmt", geneIdType = EntrezIdentifier())
library(GSEABase)
entrezOncogens <- getGmt("c6.all.v6.1.entrez.gmt", geneIdType = EntrezIdentifier())
entrezOncogens
length(entrezOncogens)
head(names(entrezOncogens))
gsc <- mapIdentifiers(entrezOncogens, AnnoOrEntrezIdentifier(metadata(se.filt)$annotation))
gsc
Im <- incidence(gsc)
dim(Im)
Im[1:2, 1:10]
Im <- Im[, colnames(Im) %in% rownames(se.filt)]
dim(Im)
se.filt <- se.filt[colnames(Im), ]
dim(se.filt)
dge.filt <- dge.filt[colnames(Im), ]
dim(dge.filt)
library(limma)
library(sva)
mod <- model.matrix(~se.filt$type + bcr_patient_barcode, data = colData(se.filt))
mod0 <- model.matrix(~1, data = colData(se.filt))
sv <- sva(assays(se.filt)$logCPM, mod = mod, mod0 = mod0)
mod <- cbind(mod, sv$sv)
colnames(mod) <- c(colnames(mod)[1:48], paste0("SV", 1:sv$n))
v <- voom(dge.filt, mod)
fit <- lmFit(assays(se.filt)$logCPM, mod)
fit <- eBayes(fit, trend = TRUE)
tt <- topTable(fit, coef = 2, n = Inf)
Im <- Im[rowSums(Im) >= 5, ]
dim(Im)
tGSgenes <- tt[match(colnames(Im), rownames(tt)), "t"]
length(tGSgenes)
head(tGSgenes)
zS <- sqrt(rowSums(Im)) * (as.vector(Im %*% tGSgenes)/rowSums(Im))
length(zS)
head(zS)
rnkGS <- sort(abs(zS), decreasing = TRUE)
head(rnkGS)
qqnorm(zS)
abline(0,1)
pv <- pmin(pnorm(zS), 1 - pnorm(zS))
pvadj <- p.adjust(pv, method = "fdr")
DEgs <- names(pvadj)[which(pvadj < 0.01)]
length(DEgs)
library(GSVA)
GSexpr <- gsva(assays(se.filt)$logCPM, gsc, min.sz=5, max.sz=300, verbose=FALSE)
GSexpr
dim(GSexpr)
mod <- model.matrix(~se.filt$type + bcr_patient_barcode, data = colData(se.filt))
mod0 <- model.matrix(~1, data = colData(se.filt))
svaobj <- sva(GSexpr, mod, mod0)
modSVs <- cbind(mod, svaobj$sv)
fit <- lmFit(GSexpr, modSVs)
fit <- eBayes(fit)
tt <- topTable(fit, coef = 2, n = Inf)
DEgs <- rownames(tt[tt$adj.P.Val < 0.01, , drop = FALSE])
length(DEgs)
head(tt)
plot(tt$logFC, -log10(tt$P.Value), xlab="Log2 fold-change", ylab="-log10 P-value",
pch=".", cex=5, col=grey(0.75), cex.axis=1.2, cex.lab=1.5, las=1)
posx <- tt[tt$adj.P.Val < 0.01, "logFC"] ; posy <- -log10(tt[tt$adj.P.Val < 0.01, "P.Value"])
points(posx, posy, pch=".", cex=5, col="red")
library(knitr)
library(SummarizedExperiment)
library(edgeR)
opts_chunk$set(cache=TRUE,
cache.path="cache/file2",
cache.extra=R.version.string,
autodep=TRUE,
fig.align="center",
comment="")
se.filt <- readRDS(file.path("results", "paired_se.filt.batch.rds"))
library(knitr)
library(SummarizedExperiment)
library(edgeR)
opts_chunk$set(cache=TRUE,
cache.path="cache/file2",
cache.extra=R.version.string,
autodep=TRUE,
fig.align="center",
comment="")
se.filt <- readRDS(file.path("results", "paired_se.filt.rds"))
dge.filt <- readRDS(file.path("results", "paired_dge.filt.rds"))
library(knitr)
library(SummarizedExperiment)
library(edgeR)
opts_chunk$set(cache=TRUE,
cache.path="cache/file2",
cache.extra=R.version.string,
autodep=TRUE,
fig.align="center",
comment="")
se.filt <- readRDS(file.path("results", "paired_se.filt.rds"))
dge.filt <- readRDS(file.path("results", "paired_dge.filt.rds"))
library(sva)
mod <- model.matrix(~type + bcr_patient_barcode, data = colData(se.filt))
v <- voom(dge.filt, mod, plot=TRUE)
fit <- lmFit(v, mod)
fit <- eBayes(fit)
FDRcutoff <- 0.1
res <- decideTests(fit, p.value = FDRcutoff)
summary(res)
genesmd <- data.frame(chr = as.character(seqnames(rowRanges(se.filt))), symbol = rowData(se.filt)[, 1], stringsAsFactors = FALSE)
fit$genes <- genesmd
#table of results
tt <- topTable(fit, coef = 2, n = Inf)
head(tt, n = 10)
#by chromosome
sort(table(tt$chr[tt$adj.P.Val < FDRcutoff]), decreasing = TRUE)
# DE genes
DEgenes <- rownames(tt)[tt$adj.P.Val < FDRcutoff]
length(DEgenes)
#saveRDS(DEgenes, file.path("results", "DEgenes.rds"))
genesmd <- data.frame(chr = as.character(seqnames(rowRanges(se.filt))), symbol = rowData(se.filt)[, 1], stringsAsFactors = FALSE)
fit$genes <- genesmd
tt <- topTable(fit, coef = 2, n = Inf)
head(tt, n = 10)
genesmd <- data.frame(chr = as.character(seqnames(rowRanges(se.filt))), symbol = rowData(se.filt)[, 1], stringsAsFactors = FALSE)
fit$genes <- genesmd
tt <- topTable(fit, coef = 2, n = Inf)
sort(table(tt$chr[tt$adj.P.Val < FDRcutoff]), decreasing = TRUE)
head(tt, n = 10)
genesmd <- data.frame(chr = as.character(seqnames(rowRanges(se.filt))), symbol = rowData(se.filt)[, 1], stringsAsFactors = FALSE)
fit$genes <- genesmd
tt <- topTable(fit, coef = 2, n = Inf)
head(tt, n = 10)
DEgenes <- rownames(tt)[tt$adj.P.Val < FDRcutoff]
length(DEgenes)
saveRDS(DEgenes, file.path("results", "DEgenes.rds"))
par(mfrow = c(1, 2), mar = c(4, 5, 3, 2))
volcanoplot(fit, coef = 2, highlight = 7, names = fit$genes$symbol, main = "Model")
top10 <- order(fit$lods[, 2], decreasing = TRUE)[1:10]
plotMA(fit, coef = 2, status = rownames(fit$lods) %in% DEgenes, legend = FALSE,
main = "Model 6", hl.pch = 46, hl.cex = 4, bg.pch = 46, bg.cex = 3, las = 1)
par(mfrow = c(1, 2), mar = c(4, 5, 3, 2))
volcanoplot(fit, coef = 2, highlight = 7, names = fit$genes$symbol, main = "Model")
top10 <- order(fit$lods[, 2], decreasing = TRUE)[1:10]
limma::plotMA(fit, coef = 2, status = rownames(fit$lods) %in% DEgenes, legend = FALSE,
main = "Model 6", hl.pch = 46, hl.cex = 4, bg.pch = 46, bg.cex = 3, las = 1)
text(fit$Amean[top10], fit$coef[top10, 2], fit$genes$symbol[top10], cex = 0.5, pos = 4)
par(mfrow = c(1, 2), mar = c(4, 5, 3, 2))
volcanoplot(fit, coef = 2, highlight = 7, names = fit$genes$symbol, main = "Model")
top10 <- order(fit$lods[, 2], decreasing = TRUE)[1:10]
limma::plotMA(fit, coef = 2, status = rownames(fit$lods) %in% DEgenes, legend = FALSE,
main = "Model", hl.pch = 46, hl.cex = 4, bg.pch = 46, bg.cex = 3, las = 1)
text(fit$Amean[top10], fit$coef[top10, 2], fit$genes$symbol[top10], cex = 0.5, pos = 4)
par(mfrow = c(1, 2), mar = c(4, 5, 2, 2))
hist(tt$P.Value, xlab = "Raw P-values", main = "", las = 1)
qqt(fit$t[, 2], df = fit$df.prior + fit$df.residual, main = "", pch = ".", cex = 3)
abline(0, 1, lwd = 2)
sessionInfo()
par(mfrow = c(1, 2), mar = c(4, 5, 3, 2))
volcanoplot(fit, coef = 2, highlight = 7, names = fit$genes$symbol, main = "Model")
top10 <- order(fit$lods[, 2], decreasing = TRUE)[1:10]
limma::plotMA(fit, coef = 2, status = rownames(fit$lods) %in% DEgenes, legend = FALSE,
hl.pch = 46, hl.cex = 4, bg.pch = 46, bg.cex = 3, las = 1)
text(fit$Amean[top10], fit$coef[top10, 2], fit$genes$symbol[top10], cex = 0.5, pos = 4)
par(mfrow = c(1, 2), mar = c(4, 5, 3, 2))
volcanoplot(fit, coef = 2, highlight = 7, names = fit$genes$symbol, main = "Model")
top10 <- order(fit$lods[, 2], decreasing = TRUE)[1:10]
limma::plotMA(fit, coef = 2, status = rownames(fit$lods) %in% DEgenes, legend = FALSE,
main = "Model", hl.pch = 46, hl.cex = 4, bg.pch = 46, bg.cex = 3, las = 1)
text(fit$Amean[top10], fit$coef[top10, 2], fit$genes$symbol[top10], cex = 0.5, pos = 4)
par(mfrow = c(1, 2), mar = c(4, 5, 2, 2))
hist(tt$P.Value, xlab = "Raw P-values", main = "", las = 1)
qqt(fit$t[, 2], df = fit$df.prior + fit$df.residual, main = "", pch = ".", cex = 3)
abline(0, 1, lwd = 2)
par(mfrow = c(1, 2), mar = c(4, 5, 2, 2))
hist(tt$P.Value, xlab = "Raw P-values", main = "", las = 1)
qqt(fit$t[, 2], df = fit$df.prior + fit$df.residual, main = "", pch = ".", cex = 3)
abline(0, 1, lwd = 2)
par(mfrow = c(1, 2), mar = c(4, 5, 3, 2))
volcanoplot(fit, coef = 2, highlight = 7, names = fit$genes$symbol, main = "Model")
top10 <- order(fit$lods[, 2], decreasing = TRUE)[1:10]
limma::plotMA(fit, coef = 2, status = rownames(fit$lods) %in% DEgenes, legend = FALSE,
)
text(fit$Amean[top10], fit$coef[top10, 2], fit$genes$symbol[top10], cex = 0.5, pos = 4)
par(mfrow = c(1, 2), mar = c(4, 5, 3, 2))
volcanoplot(fit, coef = 2, highlight = 7, names = fit$genes$symbol, main = "Model")
top10 <- order(fit$lods[, 2], decreasing = TRUE)[1:10]
limma::plotMA(fit, coef = 2, status = rownames(fit$lods) %in% DEgenes, legend = FALSE,
main = "Model", hl.pch = 46, hl.cex = 4, bg.pch = 46, bg.cex = 3, las = 1)
text(fit$Amean[top10], fit$coef[top10, 2], fit$genes$symbol[top10], cex = 0.5, pos = 4)
library(knitr)
library(SummarizedExperiment)
library(edgeR)
library(geneplotter)
opts_chunk$set(cache=TRUE,
cache.path="cache/file2",
cache.extra=R.version.string,
autodep=TRUE,
fig.align="center",
comment="")
se.filt <- readRDS(file.path("results", "paired_se.filt.rds"))
library(knitr)
library(SummarizedExperiment)
library(edgeR)
library(geneplotter)
opts_chunk$set(cache=TRUE,
cache.path="cache/file2",
cache.extra=R.version.string,
autodep=TRUE,
fig.align="center",
comment="")
se.filt <- readRDS(file.path("results", "paired_se.filt.rds"))
dge.filt <- readRDS(file.path("results", "paired_dge.filt.rds"))
DEgenes <- readRDS(file.path("results", "DEgenes.rds"))
geneUniverse <- rownames(se.filt)
length(geneUniverse)
library(GOstats)
params <- new("GOHyperGParams", geneIds=DEgenes, universeGeneIds=geneUniverse,
annotation="org.Hs.eg.db", ontology="BP",
pvalueCutoff=0.05, testDirection="over")
library(GOstats)
params <- new("GOHyperGParams", geneIds=DEgenes, universeGeneIds=geneUniverse,
annotation="org.Hs.eg.db", ontology="BP",
pvalueCutoff=0.05, testDirection="over")
geneUniverse <- rownames(se.filt)
length(geneUniverse)
library(GOstats)
params <- new("GOHyperGParams", geneIds=DEgenes, universeGeneIds=geneUniverse,
annotation="org.Hs.eg.db", ontology="BP",
pvalueCutoff=0.05, testDirection="over")
hgOver <- hyperGTest(params)
hgOver
hgOver <- hyperGTest(params)
hgOver
conditional(params) <- TRUE
hgOverCond <- hyperGTest(params)
hgOverCond
htmlReport(hgOverCond, file = "gotests.html")
browseURL("gotests.html")
goresults <- summary(hgOverCond)
head(goresults)
goresults <- goresults[goresults$Size >= 3 & goresults$Size <= 300 & goresults$Count >= 3, ]
goresults <- goresults[order(goresults$OddsRatio, decreasing=TRUE), ]
head(goresults)
library(GSEABase)
entrezOncogens <- getGmt("c6.all.v6.1.entrez.gmt", geneIdType = EntrezIdentifier())
entrezOncogens
length(entrezOncogens)
head(names(entrezOncogens))
gsc <- mapIdentifiers(entrezOncogens, AnnoOrEntrezIdentifier(metadata(se.filt)$annotation))
gsc
Im <- incidence(gsc)
dim(Im)
Im[1:2, 1:10]
Im <- Im[, colnames(Im) %in% rownames(se.filt)]
dim(Im)
se.filt <- se.filt[colnames(Im), ]
dim(se.filt)
dge.filt <- dge.filt[colnames(Im), ]
dim(dge.filt)
library(limma)
library(sva)
mod <- model.matrix(~type + bcr_patient_barcode, data = colData(se.filt))
v <- voom(dge.filt, mod, plot=TRUE)
fit <- lmFit(assays(se.filt)$logCPM, mod)
fit <- eBayes(fit, trend = TRUE)
tt <- topTable(fit, coef = 2, n = Inf)
Im <- Im[rowSums(Im) >= 5, ]
dim(Im)
tGSgenes <- tt[match(colnames(Im), rownames(tt)), "t"]
length(tGSgenes)
head(tGSgenes)
zS <- sqrt(rowSums(Im)) * (as.vector(Im %*% tGSgenes)/rowSums(Im))
length(zS)
head(zS)
rnkGS <- sort(abs(zS), decreasing = TRUE)
head(rnkGS)
library(GSVA)
GSexpr <- gsva(assays(se.filt)$logCPM, gsc, min.sz=5, max.sz=300, verbose=FALSE)
class(GSexpr)
dim(GSexpr)
mod <- model.matrix(~se.filt$type + bcr_patient_barcode, data = colData(se.filt))
fit <- lmFit(GSexpr, mod)
fit <- eBayes(fit)
tt <- topTable(fit, coef = 2, n = Inf)
DEgs <- rownames(tt[tt$adj.P.Val < 0.01, , drop = FALSE])
DEgs
mod <- model.matrix(~se.filt$type + bcr_patient_barcode, data = colData(se.filt))
fit <- lmFit(GSexpr, mod)
fit <- eBayes(fit)
tt <- topTable(fit, coef = 2, n = Inf)
DEgs <- rownames(tt[tt$adj.P.Val < 0.01, , drop = FALSE])
DEgs
plot(tt$logFC, -log10(tt$P.Value), xlab="Log2 fold-change", ylab="-log10 P-value",
pch=".", cex=5, col=grey(0.75), cex.axis=1.2, cex.lab=1.5, las=1)
posx <- tt[tt$adj.P.Val < 0.01, "logFC"] ; posy <- -log10(tt[tt$adj.P.Val < 0.01, "P.Value"])
points(posx, posy, pch=".", cex=5, col="red")
text(posx, posy, rownames(tt)[tt$adj.P.Val < 0.01], pos=1)
